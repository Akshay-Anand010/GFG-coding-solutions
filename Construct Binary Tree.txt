class GfG
{
    public static class Pair{
        Node node;
        int state;
        
        Pair(Node node,int state){
            this.node=node;
            this.state=state;
        }
    }
    public Node constructBTree(int pre[], int preM[], int size)
    {
     Node root=new Node(pre[0]);
     Pair rtp=new Pair(root,1);
     
     Stack<Pair> st=new Stack<>();
     st.push(rtp);
     
     int idx=0;
     while(st.size()>0)
     {
     Pair top=st.peek();
     if(top.state==1){
         idx++;
         if(pre[idx]!=null)
         {
            top.node.left=new Node(arr[idx]);
            Pair lp=new Pair(top.node.left,1);
            st.push(lp);
         }else{
             top.node.left=null;
         }
         top.state++;
     }else if(top.state==2){
         idx++;
         if(pre[idx]!=null)
         {
            top.node.right=new Node(arr[idx]);
            Pair rp=new Pair(top.node.right,1);
            st.push(rp);
         }else{
             top.node.right=null;
         }
         top.state++;
     }else{
         st.pop();
     }
     }
     
   return root;  
    }
    
}